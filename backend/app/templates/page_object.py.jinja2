from playwright.sync_api import Page

class {{ class_name }}:
    """
    Page Object for {{ class_name }}
    URL Pattern: {{ url_pattern }}
    """

    def __init__(self, page: Page):
        self.page = page
        {% for name, selector in selectors.items() %}
        self.{{ name }} = "{{ selector.value }}"  # {{ selector.type }}
        {% endfor %}

    {% for name, selector in selectors.items() %}
    async def get_{{ name }}(self):
        """Get {{ name }} element"""
        return await self.page.locator(self.{{ name }}).first
    {% endfor %}

    async def navigate(self):
        """Navigate to the page"""
        await self.page.goto("{{ url_pattern }}")

    async def is_loaded(self) -> bool:
        """Check if the page is loaded"""
        try:
            {% for name, selector in selectors.items() %}
            {% if loop.first %}
            await self.page.wait_for_selector(self.{{ name }})
            {% endif %}
            {% endfor %}
            return True
        except:
            return False
